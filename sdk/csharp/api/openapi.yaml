openapi: 3.1.0
info:
  contact:
    email: info@ubill.ge
  description: |-
    UBill API - provides programmatic access to our resources.
    You will be able to integrate our service into your system and communicate with clients easily.
  termsOfService: https://ubill.ge/terms
  title: UBill API
  version: 2.1.7
servers:
- description: The Production API Server
  url: https://api.ubill.dev/v1
tags:
- description: SMS Endpoints
  name: sms
paths:
  /sms/brandNameCreate:
    post:
      operationId: createBrandName
      requestBody:
        $ref: '#/components/requestBodies/CreateBrandNamePayload'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateBrandNameResponse'
          description: successful operation
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
      - api_key: []
      summary: Create Brand Name
      tags:
      - sms
  /sms/brandNames:
    get:
      operationId: getBrandNames
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrandNamesResponse'
          description: successful operation
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
      - api_key: []
      summary: Get All Brand Names
      tags:
      - sms
  /sms/send:
    post:
      operationId: sendSMS
      requestBody:
        $ref: '#/components/requestBodies/SMSPayload'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendSMSResponse'
          description: successful operation
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
      - api_key: []
      summary: Send SMS
      tags:
      - sms
  /sms/report/{smsID}:
    get:
      operationId: getDeliveryReport
      parameters:
      - $ref: '#/components/parameters/SMSIDParam'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeliveryReportResponse'
          description: successful operation
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
      - api_key: []
      summary: Get Delivery Report
      tags:
      - sms
  /sms/balance:
    get:
      operationId: getBalance
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SMSBalanceResponse'
          description: successful operation
        "401":
          $ref: '#/components/responses/Unauthorized'
      security:
      - api_key: []
      summary: Get SMS Balance
      tags:
      - sms
components:
  parameters:
    SMSIDParam:
      description: Unique identifier of the SMS
      explode: false
      in: path
      name: smsID
      required: true
      schema:
        $ref: '#/components/schemas/SMSIdentifier'
      style: simple
  requestBodies:
    CreateBrandNamePayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateBrandNamePayload'
      description: Brand Name payload to create
    SMSPayload:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SMSPayload'
      description: SMS payload for sending messages
  responses:
    Unauthorized:
      content:
        text/plain:
          example: Please authorize with valid API key!
      description: Unauthorized
  schemas:
    BaseResponse:
      properties:
        statusID:
          description: Response status code
          example: 0
          format: int64
          type: integer
        message:
          description: Human-readable response message
          example: Success
          type: string
      required:
      - statusID
    StatusCode:
      description: Response status code
      example: 0
      format: int64
      type: integer
    SMSIdentifier:
      description: Unique SMS identifier
      format: int64
      type: integer
    BrandName:
      example:
        createdAt: 2025-05-28 10:07:18
        authorized: "1"
        name: ubill-info
        id: "1"
      properties:
        id:
          example: "1"
          type: string
        name:
          example: ubill-info
          type: string
        authorized:
          example: "1"
          type: string
        createdAt:
          example: 2025-05-28 10:07:18
          type: string
      required:
      - authorized
      - createdAt
      - id
      - name
    DeliveryReportItem:
      example:
        number: "995511194241"
        statusID: "1"
      properties:
        number:
          example: "995511194241"
          type: string
        statusID:
          example: "1"
          type: string
    CreateBrandNamePayload:
      example:
        brandName: ubill-info
      properties:
        brandName:
          example: ubill-info
          type: string
      required:
      - brandName
    SMSPayload:
      example:
        stopList: true
        brandID: "1"
        numbers:
        - "995511194241"
        - "995511194241"
        text: Hello
      properties:
        brandID:
          example: "1"
          format: int64
          type: integer
        numbers:
          items:
            example: "995511194241"
            format: int64
            type: integer
          type: array
        text:
          example: Hello
          type: string
        stopList:
          description: Enable/disable checking numbers in the stop list
          type: boolean
      required:
      - brandID
      - numbers
      - stopList
      - text
    CreateBrandNameResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          brandID:
            description: Brand identifier
            example: 1
            format: int64
            type: integer
      example:
        statusID: 0
        brandID: 1
        message: Success
    BrandNamesResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          brands:
            description: List of available brand names
            items:
              $ref: '#/components/schemas/BrandName'
            type: array
        required:
        - brands
      example:
        brands:
        - createdAt: 2025-05-28 10:07:18
          authorized: "1"
          name: ubill-info
          id: "1"
        - createdAt: 2025-05-28 10:07:18
          authorized: "1"
          name: ubill-info
          id: "1"
        statusID: 0
        message: Success
    SendSMSResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          smsID:
            example: "100"
            type: string
      example:
        smsID: "100"
        statusID: 0
        message: Success
    DeliveryReportResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          result:
            items:
              $ref: '#/components/schemas/DeliveryReportItem'
            type: array
      example:
        result:
        - number: "995511194241"
          statusID: "1"
        - number: "995511194241"
          statusID: "1"
        statusID: 0
        message: Success
    SMSBalanceResponse:
      allOf:
      - $ref: '#/components/schemas/BaseResponse'
      - properties:
          sms:
            example: "1000"
            type: string
      example:
        statusID: 0
        sms: "1000"
        message: Success
  securitySchemes:
    api_key:
      description: API key for authentication
      in: query
      name: key
      type: apiKey

